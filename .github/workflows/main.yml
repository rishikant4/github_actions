# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: 'MyWorkflow'

on:
  push:
    branches: [ "master" ]
  pull_request:


jobs:
  build:
    name: 'Build & Analyze'
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3
      
    # Set Up The Java 
    - name: Setup JDK 1.8
      uses: actions/checkout@v3
      with:
        java-version: 1.8  
    - name: Build Code
      run: mvn -B package --file pom.xml
    
    - name: Sonar Scanner
      env:
       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
       SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: mvn -B package org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=rishikant4_github_actions
      
    - name: Nexus Repo Publish
      uses: sonatype-nexus-community/nexus-repo-github-action@master
      with:
        serverUrl: http://3.109.200.207:8081/repository/my_repo/
        username: admin
        password: ${{ secrets.NEXUS_PASSWORD }}
        format: maven2
        repository: my_repo
        coordinates: groupId=in.javahome artifactId=simple-app version=2.0.0
        assets: extension=war
        filename: ./target/simple-app-2.0.0.war
