# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support


name: 'MyWorkflow1'

on:
  push:
    branches: [ "master" ]
  pull_request:


    
jobs:
  build:
    name: 'github-actions-CI'
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3
      
    # Set Up The Java 
    - name: Setup JDK 1.8
      uses: actions/checkout@v3
      with:
        java-version: 1.8  
    - name: Build Code
      run: mvn -B package --file pom.xml
    
    - name: Sonar Scanner
      env:
       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
       SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: mvn -B package org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=rishikant4_github_actions
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: webapp
        path: /home/runner/work/github_actions/github_actions/target/simple-app-2.0.0
        
    - name: Build & push Docker image
      uses: mr-smithers-excellent/docker-build-push@v5
      with:
        image: rishi236/rishiapps
        tags: latest
        registry: docker.io
        dockerfile: Dockerfile
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
        
  # Deploy:
  #   needs: build
  #   runs-on: ubuntu-latest
    
  #   steps:
  #   - uses: actions/checkout@master
  #   - name: kubectl - Google Cloud GKE cluster.
  #     uses: ameydev/gke-kubectl-action@master
  #     env:
  #       PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  #       APPLICATION_CREDENTIALS: ${{ secrets.GKE_SA_KEY }}
  #       CLUSTER_NAME: github-actions-gke
  #       ZONE_NAME: us-central1-c
  #     with:
  #       args: apply -f deployment.yaml
